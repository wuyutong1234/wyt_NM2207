---
title: "Challenge-5"
author: "WU YUTONG"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Questions
<br>

#### Question-1: Local Variable Shadowing 

Create an R function that defines a global variable called `x` with a value of 5. Inside the function, declare a local variable also named `x` with a value of 10. Print the value of `x` both inside and outside the function to demonstrate shadowing.

**Solutions:**

```{r, eval=TRUE,echo=TRUE}
# Enter code here
x <- 5
sprintf("The value assigned to x outside the function is %d",x)
local_variable <- function() {
  x <- 10
  sprintf("The value assigned to x inside the function is %d",x)
}
local_variable()
```
<br>

#### Question-2: Modify Global Variable

Create an R function that takes an argument and adds it to a global variable called `total`. Call the function multiple times with different arguments to accumulate the values in `total`.

**Solutions:**

```{r, eval=TRUE,echo=TRUE}
# Enter code here
total <- 3

accumulate <- function(number) {
  total <<- total + number
}

accumulate(2)
accumulate(2)
accumulate(2)

sprintf("total= %d",total)
```
<br>

#### Question-3: Global and Local Interaction 

Write an R program that includes a global variable `total` with an initial value of 100. Create a function that takes an argument, adds it to `total`, and returns the updated `total`. Demonstrate how this function interacts with the global variable.

**Solutions:**

```{r, eval=TRUE,echo=TRUE}
# Enter code here
total <- 100

add_to_total <- function(number) {
  total <<- total + number
  return(total) 
}
sprintf("initial total = %d",total)

result_2 <- add_to_total(200)
sprintf("second total = %d",total)

result_3 <- add_to_total(500)
sprintf("third total = %d",total)
```
<br>

#### Question-4: Nested Functions

Define a function `outer_function` that declares a local variable `x` with a value of 5. Inside `outer_function`, define another function `inner_function` that prints the value of `x`. Call both functions to show how the inner function accesses the variable from the outer function's scope.

**Solutions:**

```{r, eval=TRUE,echo=TRUE}
# Enter code here
outer_function <- function() {
  x <- 5
  inner_function <- function(){
    sprintf("x = %d",x)
   # return(inner_function)
  }
  inner_function()
}

outer_function()
```
<br>

#### Question-5: Meme Generator Function

Create a function that takes a text input and generates a humorous meme with the text overlaid on an image of your choice. You can use the `magick` package for image manipulation. You can find more details about the commands offered by the package, with some examples of annotating images here: https://cran.r-project.org/web/packages/magick/vignettes/intro.html

**Solutions:**

```{r, eval=FALSE,echo=TRUE}
# Enter code here
library(magick)

create_meme <- function(text, image_path, output_path) {
  meme <- image_read(image_path) 
  meme <- image_annotate(meme, text, gravity = "center", size = 50, color = "black")
  image_write(meme, path = output_path)
}
create_meme("when", "meme.jpg", "output_meme.jpg")
```
<br>

#### Question-6: Text Analysis Game  

Develop a text analysis game in which the user inputs a sentence, and the R function provides statistics like the number of words, characters, and average word length. Reward the user with a "communication skill level" based on their input.

**Solutions:**

```{r, eval=TRUE,echo=TRUE}
# Enter code here
# Define a function to analyze text and provide a communication skill level
analyze_text_game <- function() {
  # Prompt the user to enter a sentence
  cat("Welcome to the Text Analysis Game!\n")
  sentence <- readline("Please enter a sentence: ")
  
  # Calculate statistics
  num_words <- length(unlist(strsplit(sentence, " ")))
  num_chars <- nchar(sentence)
  average_word_length <- num_chars / num_words
  
  # Provide feedback based on word count
feedback <- if (num_words <= 5) {
    "You have a limited vocabulary. Try using more words!"
  } else if (num_words <= 10) {
    "Your communication skills are improving!"
  } else if (num_words <= 15) {
    "You have good communication skills!"
  } else {
    "You are an excellent communicator!"
  }
  
  
  # Display the statistics and feedback
  cat("\nText Analysis Results:\n")
  cat("Number of words:", num_words, "\n")
  cat("Number of characters:", num_chars, "\n")
  cat("Average word length:", round(average_word_length, 2), "\n")
  cat("Feedback:", feedback, "\n")
}
?cat
# Run the text analysis game
analyze_text_game()
```
<br>